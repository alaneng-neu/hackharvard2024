// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  googleId   String     @unique
  name       String
  email      String     @unique
  businesses Business[]
  coupons    Coupon[]
}

enum BusinessType {
  FOOD_AND_BEVERAGE
  RETAIL
  CLOTHING_AND_ACCESSORIES
  HEALTH_AND_WELLNESS
  ENTERTAINMENT
  HOSPITALITY
  SERVICES
  EDUCATION
  TECHNOLOGY
  NON_PROFIT
  OTHER
}

model Business {
  id            String         @id @default(uuid())
  owner         User           @relation(fields: [ownerId], references: [id])
  ownerId       String
  location      Location       @relation(fields: [locationId], references: [id])
  locationId    String
  // Business details
  name          String
  description   String?
  businessTypes BusinessType[]
  promotions    Promotion[]
}

model Location {
  id       String     @id @default(uuid())
  Business Business[]
  address  String
}

enum PromotionType {
  PERCENT_DISCOUNT
  VALUE_DISCOUNT
}

model Promotion {
  id         String        @id @default(uuid())
  business   Business      @relation(fields: [businessId], references: [id])
  businessId String
  coupons    Coupon[]
  quantity   Int
  type       PromotionType
  value      Float
}

// A coupon represents a promotion that has been redeemed by a user
model Coupon {
  id          String    @id @default(uuid())
  promotion   Promotion @relation(fields: [promotionId], references: [id])
  promotionId String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  redeemedAt  DateTime?
}
